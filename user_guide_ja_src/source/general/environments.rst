##################
複数の環境の取扱い
##################

開発者は、アプリケーションが開発環境か本番環境かによって
違ったシステムの振る舞いをよく希望します。 たとえば、詳細なエラーの出
力は、開発中のアプリケーションでは役立ちますが、 "本番"
サイトではセキュリティ上の問題をもたらす可能性があります。



定数 ENVIRONMENT
================

デフォルトでは CodeIgniter は、定数 ENVIRONMENT が ' development '
に設定されています。index.php の先頭に以下が記述されています:


::

	
	define('ENVIRONMENT', 'development');


いくつかの基本的なフレームワークの振る舞いに影響すること(次のセクショ
ンを参照)に加えて、 この定数を利用し、開発中の稼働させている環境により
変えることができます。



デフォルトのフレームワークの振る舞いへの影響
============================================

CodeIgniter システムの中のいくつかの場所で定数 ENVIRONMENT が使われま
す。このセクションでは、デフォルトのフレームワークの振る舞いがどう影響
を受けるか 説明します。



エラー報告
~~~~~~~~~~

定数 ENVIRONMENT を ' development ' に設定すると、 すべての PHP
エラーが発生時にブラウザに表示されます。反対に、 ' production '
に設定すると、すべてのエラー出力が停止します。本番環境で
エラー報告を停止することは1つの :doc:`よいセキュリティ上の習慣
<security>` です。



設定ファイル
~~~~~~~~~~~~

オプションで、CodeIgniter に環境固有の設定ファイルを読み込ませることが
できます。これは、環境により異なった API
キーを使うような場合に便利です。 詳細は、 :doc:`設定クラス
<../libraries/config.html#environments>`
の複数の環境のセクションに記述されています。

