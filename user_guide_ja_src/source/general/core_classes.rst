########################
コアシステムクラスの作成
########################

CodeIgniter が実行されるたびに、フレームワークの一部として自動的に初期
化される基本クラスがいくつかあります。 しかし、コアシステムのクラスを
ユーザバージョンのクラスと置き換えたり、コアシステムのクラスを拡張した
りすることもできます。

ほとんどのユーザにとっては、そうすることは、まず必要ないでしょう。
しかし、CodeIgniter のコアを大きく変えたい人のために、置き換えたり拡張
したりできる選択肢が用意されています。

.. note:: コアのシステムクラスを扱うと様々な影響が出てきますので、コアクラスを変更する前には、必ず、
変更することで何が起こるかを調べるようにしてください。



システムクラスのリスト
======================

下記は、CodeIgniter
を実行する度にいつも読み出されるコアシステムファイルのリストです:


-  Benchmark
-  Config
-  Controller
-  Exceptions
-  Hooks
-  Input
-  Language
-  Loader
-  Log
-  Output
-  Router
-  URI
-  Utf8




コアクラスの置き換え
====================

デフォルトのクラスの代わりにユーザ定義のシステムクラスを使うには、単に
、ユーザが作成したバージョンのものを application/core
ディレクトリの中に配置するだけです:


::

	application/core/some-class.php


このディレクトリが存在しない場合は、自分で作成することもできます。

ファイル名は、上のリストの中にある通常のものと置き換えるものの名前と同
じ名前にします。

ユーザクラスには、 CI をプリフィックスとして使わなければならないことを
注意してください。たとえば、ファイルが Input.php
という名前ならクラスは次のように名付けます:


::

	
	class CI_Input {
	
	}




コアクラスの拡張(継承)
======================

既存の関数に何かの機能を追加する - おそらく1つか2つのメソッド追加 -
だけでよいのであれば、 ライブラリの全部をユーザ定義のものに置き換えて
しまうのはやり過ぎです。このようなケースでは、クラスを単に拡張(継承)す
るのが適しています。
クラスの拡張はクラスの置き換えと次の2点を除いてよく似ています:


-  クラス宣言では親クラスを継承する必要があります。
-  新しいクラスの名前とファイル名には、 MY_ というプリフィックス(この項
   目は変更できます。このページの下の方をご覧ください)を付ける必要があり
   ます。


たとえば、ネイティブの Input クラスを拡張するには、 application/core/
MY_Input.php
という名前のファイルを作成し、次のようにクラス宣言をします:


::

	
	class MY_Input extends CI_Input {
	
	}


.. note:: ユーザクラスでコンストラクタを使う場合は親クラスのコンストラクタを呼ぶのを忘れないでください:


::

	
	class MY_Input extends CI_Input {
	
	    function __construct()
	    {
	        parent::__construct();
	    }
	}


Tip: 親クラスのメソッドと同じ名前のユーザクラスのメソッドはみな、ネイ
ティブのものと置き換えられて使用されます ("メソッドのオーバーライド"
として知られています ). これにより、実質的に、CodeIgniter
のコアを置き換えることができます。

もしコントローラのコアクラスを拡張したいなら、コントローラのコンストラ
クタに新しいクラスを継承させます。


::

	class Welcome extends MY_Controller {
	
	    function __construct()
	    {
	        parent::__construct();
	    }
	
	    function index()
	    {
	        $this->load->view('welcome_message');
	    }
	}




ユーザクラスのプリフィックス(接頭辞)の設定
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ユーザ作成のサブクラスにつけるプリフィックスを設定するには、
application/config/config.php
ファイルを開き、次の項目を探して設定してください:


::

	$config['subclass_prefix'] = 'MY_';


CodeIgniter の全ネイティブライブラリには CI_ というプリフィックスがつ
いているのを注意してください。ユーザ作成クラスのプリフィックスには、こ
の CI_ を使用してはいけません。

